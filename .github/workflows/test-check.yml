name: Enforce tests live only under tests/

on:
  push:
  pull_request:

jobs:
  check-tests-location:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify no tests exist outside ./tests
        shell: bash
        run: |
          set -euo pipefail
          ROOT_TEST_DIR="tests"
          violations=0

          echo "Checking for test-like files outside ./${ROOT_TEST_DIR} ..."

          # Find test-like files outside the root tests dir (common conventions for JS/TS, Python, Go, Java, C#, Kotlin, Ruby, PHP)
          mapfile -t test_files < <(find . \( -path "./.git" -o -path "./${ROOT_TEST_DIR}" \) -prune -o \
            -type f \( \
              -name "test_*.py" -o -name "*_test.py" \ -print)

          if (( ${#test_files[@]} > 0 )); then
            echo "Found test-like files outside ${ROOT_TEST_DIR}:"
            printf '%s\n' "${test_files[@]}"
            violations=1
          fi

          echo "Checking for disallowed test directories outside ./${ROOT_TEST_DIR} ..."
          # Disallow directories named test or tests outside the root tests dir
          mapfile -t bad_dirs < <(find . -type d \( -name test -o -name tests \) \
            ! -path "./${ROOT_TEST_DIR}" ! -path "./${ROOT_TEST_DIR}/*" ! -path "./.git" -print)

          if (( ${#bad_dirs[@]} > 0 )); then
            echo "Found disallowed test directories outside ${ROOT_TEST_DIR}:"
            printf '%s\n' "${bad_dirs[@]}"
            violations=1
          fi

          if (( violations > 0 )); then
            echo "::error::Tests must live under ./${ROOT_TEST_DIR}/ only."
            exit 1
          fi

          echo "OK: No tests found outside ./${ROOT_TEST_DIR}/"
